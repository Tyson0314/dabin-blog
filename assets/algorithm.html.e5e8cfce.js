import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";import{o as l,c as u,a as n,b as a,w as i,e as s,d as p,r as e}from"./app.09d9ce72.js";const k={},r=s(`<p><img src="http://img.dabin-coder.cn/image/\u6570\u636E\u7ED3\u6784\u4E0E\u7B97\u6CD5.jpg" alt="" loading="lazy"></p><h2 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u904D\u5386</h2><p>\u4E8C\u53C9\u6811\u662F\u4E00\u79CD\u975E\u5E38\u91CD\u8981\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5F88\u591A\u5176\u5B83\u6570\u636E\u7ED3\u6784\u90FD\u662F\u57FA\u4E8E\u4E8C\u53C9\u6811\u7684\u57FA\u7840\u6F14\u53D8\u800C\u6765\u7684\u3002</p><p>\u4E8C\u53C9\u6811\u7684\u5148\u5E8F\u3001\u4E2D\u5E8F\u548C\u540E\u5E8F\u5C5E\u4E8E\u6DF1\u5EA6\u4F18\u5148\u904D\u5386DFS\uFF0C\u5C42\u6B21\u904D\u5386\u5C5E\u4E8E\u5E7F\u5EA6\u4F18\u5148\u904D\u5386BFS\u3002</p><p><img src="http://img.dabin-coder.cn/image/\u524D\u5E8F\u4E2D\u5E8F\u540E\u5E8F.png" alt="" loading="lazy"></p><p>\u56DB\u79CD\u4E3B\u8981\u7684\u904D\u5386\u601D\u60F3\u4E3A\uFF1A</p><p>\u524D\u5E8F\u904D\u5386\uFF1A\u6839\u7ED3\u70B9 ---&gt; \u5DE6\u5B50\u6811 ---&gt; \u53F3\u5B50\u6811</p><p>\u4E2D\u5E8F\u904D\u5386\uFF1A\u5DE6\u5B50\u6811---&gt; \u6839\u7ED3\u70B9 ---&gt; \u53F3\u5B50\u6811</p><p>\u540E\u5E8F\u904D\u5386\uFF1A\u5DE6\u5B50\u6811 ---&gt; \u53F3\u5B50\u6811 ---&gt; \u6839\u7ED3\u70B9</p><p>\u5C42\u6B21\u904D\u5386\uFF1A\u53EA\u9700\u6309\u5C42\u6B21\u904D\u5386\u5373\u53EF</p><h3 id="\u524D\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u524D\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u524D\u5E8F\u904D\u5386</h3><p>\u904D\u5386\u601D\u8DEF\uFF1A\u6839\u7ED3\u70B9 ---&gt; \u5DE6\u5B50\u6811 ---&gt; \u53F3\u5B50\u6811\u3002</p><p>\u6839\u636E\u524D\u5E8F\u904D\u5386\u7684\u987A\u5E8F\uFF0C\u4F18\u5148\u8BBF\u95EE\u6839\u7ED3\u70B9\uFF0C\u7136\u540E\u5728\u8BBF\u95EE\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u3002\u6240\u4EE5\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u7ED3\u70B9node\uFF0C\u7B2C\u4E00\u90E8\u5206\u5373\u76F4\u63A5\u8BBF\u95EE\u4E4B\uFF0C\u4E4B\u540E\u5728\u5224\u65AD\u5DE6\u5B50\u6811\u662F\u5426\u4E3A\u7A7A\uFF0C\u4E0D\u4E3A\u7A7A\u65F6\u5373\u91CD\u590D\u4E0A\u9762\u7684\u6B65\u9AA4\uFF0C\u76F4\u5230\u5176\u4E3A\u7A7A\u3002\u82E5\u4E3A\u7A7A\uFF0C\u5219\u9700\u8981\u8BBF\u95EE\u53F3\u5B50\u6811\u3002\u6CE8\u610F\uFF0C\u5728\u8BBF\u95EE\u8FC7\u5DE6\u5B69\u5B50\u4E4B\u540E\uFF0C\u9700\u8981\u53CD\u8FC7\u6765\u8BBF\u95EE\u5176\u53F3\u5B69\u5B50\uFF0C\u53EF\u4EE5\u662F\u6808\u8FD9\u79CD\u6570\u636E\u7ED3\u6784\u6765\u652F\u6301\u3002\u5BF9\u4E8E\u4EFB\u610F\u4E00\u4E2A\u7ED3\u70B9node\uFF0C\u5177\u4F53\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><ol><li>\u8BBF\u95EE\u7ED3\u70B9\uFF0C\u5E76\u628A\u7ED3\u70B9node\u5165\u6808\uFF0C\u5F53\u524D\u7ED3\u70B9\u7F6E\u4E3A\u5DE6\u5B69\u5B50\uFF1B</li><li>\u5224\u65AD\u7ED3\u70B9node\u662F\u5426\u4E3A\u7A7A\uFF0C\u82E5\u4E3A\u7A7A\uFF0C\u5219\u53D6\u51FA\u6808\u9876\u7ED3\u70B9\u5E76\u51FA\u6808\uFF0C\u5C06\u53F3\u5B69\u5B50\u7F6E\u4E3A\u5F53\u524D\u7ED3\u70B9\uFF1B\u5426\u5219\u91CD\u590Da)\u6B65\u76F4\u5230\u5F53\u524D\u7ED3\u70B9\u4E3A\u7A7A\u6216\u8005\u6808\u4E3A\u7A7A\uFF08\u53EF\u4EE5\u53D1\u73B0\u6808\u4E2D\u7684\u7ED3\u70B9\u5C31\u662F\u4E3A\u4E86\u8BBF\u95EE\u53F3\u5B69\u5B50\u624D\u5B58\u50A8\u7684\uFF09</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preOrderTraverse2</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span> pNode <span class="token operator">=</span> root<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>pNode <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>pNode<span class="token punctuation">.</span>val<span class="token operator">+</span><span class="token string">&quot;  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            pNode <span class="token operator">=</span> pNode<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//pNode == null &amp;&amp; !stack.isEmpty()</span>
            <span class="token class-name">TreeNode</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pNode <span class="token operator">=</span> node<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E2D\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u4E2D\u5E8F\u904D\u5386</h3><p>\u904D\u5386\u601D\u8DEF\uFF1A\u5DE6\u5B50\u6811 ---&gt; \u6839\u7ED3\u70B9 ---&gt; \u53F3\u5B50\u6811</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">inorderTraversal</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> deque <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deque<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
                root <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            root <span class="token operator">=</span> deque<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            root <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u540E\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u540E\u5E8F\u904D\u5386</h3><p>\u904D\u5386\u601D\u8DEF\uFF1A\u5DE6\u5B50\u6811 ---&gt; \u53F3\u5B50\u6811 ---&gt; \u6839\u7ED3\u70B9\u3002</p><p>\u4F7F\u7528 null \u4F5C\u4E3A\u6807\u5FD7\u4F4D\uFF0C\u8BBF\u95EE\u5230 null \u8BF4\u660E\u6B64\u6B21\u9012\u5F52\u8C03\u7528\u7ED3\u675F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">postorderTraversal</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            root <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6700\u540E\u8BBF\u95EE</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//\u503C\u4E3Anull\u8BF4\u660E\u6B64\u6B21\u9012\u5F52\u8C03\u7528\u7ED3\u675F\uFF0C\u5C06\u8282\u70B9\u503C\u5B58\u8FDB\u7ED3\u679C</span>
                res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C42\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C42\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u5C42\u5E8F\u904D\u5386</h3><p>\u53EA\u9700\u8981\u4E00\u4E2A\u961F\u5217\u5373\u53EF\uFF0C\u5148\u5728\u961F\u5217\u4E2D\u52A0\u5165\u6839\u7ED3\u70B9\u3002\u4E4B\u540E\u5BF9\u4E8E\u4EFB\u610F\u4E00\u4E2A\u7ED3\u70B9\u6765\u8BF4\uFF0C\u5728\u5176\u51FA\u961F\u5217\u7684\u65F6\u5019\uFF0C\u8BBF\u95EE\u4E4B\u3002\u540C\u65F6\u5982\u679C\u5DE6\u5B69\u5B50\u548C\u53F3\u5B69\u5B50\u6709\u4E0D\u4E3A\u7A7A\u7684\uFF0C\u5165\u961F\u5217\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public void levelTraverse(TreeNode root) {
		if (root == null) {
			return;
		}
		LinkedList&lt;TreeNode&gt; queue = new LinkedList&lt;&gt;();
		queue.offer(root);
		while (!queue.isEmpty()) {
			TreeNode node = queue.poll();
			System.out.print(node.val+&quot;  &quot;);
			if (node.left != null) {
				queue.offer(node.left);
			}
			if (node.right != null) {
				queue.offer(node.right);
			}
		}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5</h2><p>\u5E38\u89C1\u7684\u6392\u5E8F\u7B97\u6CD5\u4E3B\u8981\u6709\uFF1A\u5192\u6CE1\u6392\u5E8F\u3001\u63D2\u5165\u6392\u5E8F\u3001\u9009\u62E9\u6392\u5E8F\u3001\u5FEB\u901F\u6392\u5E8F\u3001\u5F52\u5E76\u6392\u5E8F\u3001\u5806\u6392\u5E8F\u3001\u57FA\u6570\u6392\u5E8F\u3002\u5404\u79CD\u6392\u5E8F\u7B97\u6CD5\u7684\u65F6\u95F4\u7A7A\u95F4\u590D\u6742\u5EA6\u3001\u7A33\u5B9A\u6027\u89C1\u4E0B\u56FE\u3002</p><p><img src="http://img.dabin-coder.cn/image/\u6392\u5E8F\u7B97\u6CD5\u65F6\u95F4\u7A7A\u95F4\u590D\u6742\u5EA6.png" alt="" loading="lazy"></p><h3 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h3><p>\u5192\u6CE1\u6392\u5E8F\u662F\u4E00\u79CD\u7B80\u5355\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u91CD\u590D\u5730\u8D70\u8BBF\u8FC7\u8981\u6392\u5E8F\u7684\u6570\u5217\uFF0C\u4E00\u6B21\u6BD4\u8F83\u4E24\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u5B83\u4EEC\u7684\u987A\u5E8F\u9519\u8BEF\u5C31\u628A\u5B83\u4EEC\u4EA4\u6362\u8FC7\u6765\u3002\u8D70\u8BBF\u6570\u5217\u7684\u5DE5\u4F5C\u662F\u91CD\u590D\u5730\u8FDB\u884C\u76F4\u5230\u6CA1\u6709\u518D\u9700\u8981\u4EA4\u6362\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8BE5\u6570\u5217\u5DF2\u7ECF\u6392\u5E8F\u5B8C\u6210\u3002\u8FD9\u4E2A\u7B97\u6CD5\u7684\u540D\u5B57\u7531\u6765\u662F\u56E0\u4E3A\u8D8A\u5C0F\u7684\u5143\u7D20\u4F1A\u7ECF\u7531\u4EA4\u6362\u6162\u6162\u201C\u6D6E\u201D\u5230\u6570\u5217\u7684\u9876\u7AEF\u3002</p><p>\u601D\u8DEF\uFF1A</p><ul><li>\u6BD4\u8F83\u76F8\u90BB\u7684\u5143\u7D20\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5C31\u4EA4\u6362\u5B83\u4EEC\u4E24\u4E2A\uFF1B</li><li>\u5BF9\u6BCF\u4E00\u5BF9\u76F8\u90BB\u5143\u7D20\u4F5C\u540C\u6837\u7684\u5DE5\u4F5C\uFF0C\u4ECE\u5F00\u59CB\u7B2C\u4E00\u5BF9\u5230\u7ED3\u5C3E\u7684\u6700\u540E\u4E00\u5BF9\uFF0C\u8FD9\u6837\u5728\u6700\u540E\u7684\u5143\u7D20\u5E94\u8BE5\u4F1A\u662F\u6700\u5927\u7684\u6570\uFF1B</li><li>\u9488\u5BF9\u6240\u6709\u7684\u5143\u7D20\u91CD\u590D\u4EE5\u4E0A\u7684\u6B65\u9AA4\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA41~3\uFF0C\u76F4\u5230\u6392\u5E8F\u5B8C\u6210\u3002</li></ul><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">boolean</span> flag<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h3><p>\u63D2\u5165\u6392\u5E8F\uFF08Insertion-Sort\uFF09\u7684\u7B97\u6CD5\u63CF\u8FF0\u662F\u4E00\u79CD\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\u662F\u901A\u8FC7\u6784\u5EFA\u6709\u5E8F\u5E8F\u5217\uFF0C\u5BF9\u4E8E\u672A\u6392\u5E8F\u6570\u636E\uFF0C\u5728\u5DF2\u6392\u5E8F\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF0C\u627E\u5230\u76F8\u5E94\u4F4D\u7F6E\u5E76\u63D2\u5165\u3002\u63D2\u5165\u6392\u5E8F\u5728\u5B9E\u73B0\u4E0A\uFF0C\u901A\u5E38\u91C7\u7528in-place\u6392\u5E8F\uFF08\u5373\u53EA\u9700\u7528\u5230O(1)\u7684\u989D\u5916\u7A7A\u95F4\u7684\u6392\u5E8F\uFF09\uFF0C\u56E0\u800C\u5728\u4ECE\u540E\u5411\u524D\u626B\u63CF\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u53CD\u590D\u628A\u5DF2\u6392\u5E8F\u5143\u7D20\u9010\u6B65\u5411\u540E\u632A\u4F4D\uFF0C\u4E3A\u6700\u65B0\u5143\u7D20\u63D0\u4F9B\u63D2\u5165\u7A7A\u95F4\u3002</p><p>\u7B97\u6CD5\u63CF\u8FF0\uFF1A</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u63D2\u5165\u6392\u5E8F\u90FD\u91C7\u7528in-place\u5728\u6570\u7EC4\u4E0A\u5B9E\u73B0\u3002\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><ul><li>\u4ECE\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u8BE5\u5143\u7D20\u53EF\u4EE5\u8BA4\u4E3A\u5DF2\u7ECF\u88AB\u6392\u5E8F\uFF1B</li><li>\u53D6\u51FA\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5728\u5DF2\u7ECF\u6392\u5E8F\u7684\u5143\u7D20\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF1B</li><li>\u5982\u679C\u8BE5\u5143\u7D20\uFF08\u5DF2\u6392\u5E8F\uFF09\u5927\u4E8E\u65B0\u5143\u7D20\uFF0C\u5C06\u8BE5\u5143\u7D20\u79FB\u5230\u4E0B\u4E00\u4F4D\u7F6E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA43\uFF0C\u76F4\u5230\u627E\u5230\u5DF2\u6392\u5E8F\u7684\u5143\u7D20\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u65B0\u5143\u7D20\u7684\u4F4D\u7F6E\uFF1B</li><li>\u5C06\u65B0\u5143\u7D20\u63D2\u5165\u5230\u8BE5\u4F4D\u7F6E\u540E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA42~5\u3002</li></ul><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> tmp <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h3><p>\u8868\u73B0<strong>\u6700\u7A33\u5B9A\u7684\u6392\u5E8F\u7B97\u6CD5\u4E4B\u4E00</strong>\uFF0C\u56E0\u4E3A<strong>\u65E0\u8BBA\u4EC0\u4E48\u6570\u636E\u8FDB\u53BB\u90FD\u662FO(n2)\u7684\u65F6\u95F4\u590D\u6742\u5EA6</strong>\uFF0C\u6240\u4EE5\u7528\u5230\u5B83\u7684\u65F6\u5019\uFF0C\u6570\u636E\u89C4\u6A21\u8D8A\u5C0F\u8D8A\u597D\u3002\u552F\u4E00\u7684\u597D\u5904\u53EF\u80FD\u5C31\u662F\u4E0D\u5360\u7528\u989D\u5916\u7684\u5185\u5B58\u7A7A\u95F4\u3002</p><p>\u9009\u62E9\u6392\u5E8F(Selection-sort)\u662F\u4E00\u79CD\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\uFF1A\u9996\u5148\u5728\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u627E\u5230\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u5B58\u653E\u5230\u6392\u5E8F\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E\uFF0C\u7136\u540E\uFF0C\u518D\u4ECE\u5269\u4F59\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u7EE7\u7EED\u5BFB\u627E\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u7136\u540E\u653E\u5230\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\u3002\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u76F4\u5230\u6240\u6709\u5143\u7D20\u5747\u6392\u5E8F\u5B8C\u6BD5\u3002</p><p>\u601D\u8DEF\uFF1An\u4E2A\u8BB0\u5F55\u7684\u76F4\u63A5\u9009\u62E9\u6392\u5E8F\u53EF\u7ECF\u8FC7n-1\u8D9F\u76F4\u63A5\u9009\u62E9\u6392\u5E8F\u5F97\u5230\u6709\u5E8F\u7ED3\u679C\u3002\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><ul><li>\u521D\u59CB\u72B6\u6001\uFF1A\u65E0\u5E8F\u533A\u4E3AR[1..n]\uFF0C\u6709\u5E8F\u533A\u4E3A\u7A7A\uFF1B</li><li>\u7B2Ci\u8D9F\u6392\u5E8F(i=1,2,3\u2026n-1)\u5F00\u59CB\u65F6\uFF0C\u5F53\u524D\u6709\u5E8F\u533A\u548C\u65E0\u5E8F\u533A\u5206\u522B\u4E3AR[1..i-1]\u548CR(i..n\uFF09\u3002\u8BE5\u8D9F\u6392\u5E8F\u4ECE\u5F53\u524D\u65E0\u5E8F\u533A\u4E2D-\u9009\u51FA\u5173\u952E\u5B57\u6700\u5C0F\u7684\u8BB0\u5F55 R[k]\uFF0C\u5C06\u5B83\u4E0E\u65E0\u5E8F\u533A\u7684\u7B2C1\u4E2A\u8BB0\u5F55R\u4EA4\u6362\uFF0C\u4F7FR[1..i]\u548CR[i+1..n)\u5206\u522B\u53D8\u4E3A\u8BB0\u5F55\u4E2A\u6570\u589E\u52A01\u4E2A\u7684\u65B0\u6709\u5E8F\u533A\u548C\u8BB0\u5F55\u4E2A\u6570\u51CF\u5C111\u4E2A\u7684\u65B0\u65E0\u5E8F\u533A\uFF1B</li><li>n-1\u8D9F\u7ED3\u675F\uFF0C\u6570\u7EC4\u6709\u5E8F\u5316\u4E86\u3002</li></ul><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E0C\u5C14\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a> \u5E0C\u5C14\u6392\u5E8F</h3><p>\u5E0C\u5C14\u6392\u5E8F\u662F\u5E0C\u5C14\uFF08Donald Shell\uFF09\u4E8E1959\u5E74\u63D0\u51FA\u7684\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\u3002\u5E0C\u5C14\u6392\u5E8F\u4E5F\u662F\u4E00\u79CD\u63D2\u5165\u6392\u5E8F\uFF0C\u5B83\u662F\u7B80\u5355\u63D2\u5165\u6392\u5E8F\u7ECF\u8FC7\u6539\u8FDB\u4E4B\u540E\u7684\u4E00\u4E2A\u66F4\u9AD8\u6548\u7684\u7248\u672C\uFF0C\u4E5F\u79F0\u4E3A\u7F29\u5C0F\u589E\u91CF\u6392\u5E8F\uFF0C\u540C\u65F6\u8BE5\u7B97\u6CD5\u662F\u51B2\u7834O(n2\uFF09\u7684\u7B2C\u4E00\u6279\u7B97\u6CD5\u4E4B\u4E00\u3002\u5B83\u4E0E\u63D2\u5165\u6392\u5E8F\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\uFF0C\u5B83\u4F1A\u4F18\u5148\u6BD4\u8F83\u8DDD\u79BB\u8F83\u8FDC\u7684\u5143\u7D20\u3002\u5E0C\u5C14\u6392\u5E8F\u53C8\u53EB\u7F29\u5C0F\u589E\u91CF\u6392\u5E8F\u3002</p><p><strong>\u5E0C\u5C14\u6392\u5E8F\u662F\u628A\u8BB0\u5F55\u6309\u4E0B\u8868\u7684\u4E00\u5B9A\u589E\u91CF\u5206\u7EC4\uFF0C\u5BF9\u6BCF\u7EC4\u4F7F\u7528\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u7B97\u6CD5\u6392\u5E8F\uFF1B\u968F\u7740\u589E\u91CF\u9010\u6E10\u51CF\u5C11\uFF0C\u6BCF\u7EC4\u5305\u542B\u7684\u5173\u952E\u8BCD\u8D8A\u6765\u8D8A\u591A\uFF0C\u5F53\u589E\u91CF\u51CF\u81F31\u65F6\uFF0C\u6574\u4E2A\u6587\u4EF6\u6070\u88AB\u5206\u6210\u4E00\u7EC4\uFF0C\u7B97\u6CD5\u4FBF\u7EC8\u6B62\u3002</strong></p><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">ShellSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> temp<span class="token punctuation">,</span> gap <span class="token operator">=</span> len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> preIndex <span class="token operator">=</span> i <span class="token operator">-</span> gap<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
                preIndex <span class="token operator">-=</span> gap<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        gap <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u57FA\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u57FA\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u57FA\u6570\u6392\u5E8F</h3><p>\u57FA\u6570\u6392\u5E8F\u4E5F\u662F\u975E\u6BD4\u8F83\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5BF9\u6BCF\u4E00\u4F4D\u8FDB\u884C\u6392\u5E8F\uFF0C\u4ECE\u6700\u4F4E\u4F4D\u5F00\u59CB\u6392\u5E8F\uFF0C\u590D\u6742\u5EA6\u4E3AO(kn),\u4E3A\u6570\u7EC4\u957F\u5EA6\uFF0Ck\u4E3A\u6570\u7EC4\u4E2D\u7684\u6570\u7684\u6700\u5927\u7684\u4F4D\u6570\uFF1B</p><p>\u57FA\u6570\u6392\u5E8F\u662F\u6309\u7167\u4F4E\u4F4D\u5148\u6392\u5E8F\uFF0C\u7136\u540E\u6536\u96C6\uFF1B\u518D\u6309\u7167\u9AD8\u4F4D\u6392\u5E8F\uFF0C\u7136\u540E\u518D\u6536\u96C6\uFF1B\u4F9D\u6B21\u7C7B\u63A8\uFF0C\u76F4\u5230\u6700\u9AD8\u4F4D\u3002\u6709\u65F6\u5019\u6709\u4E9B\u5C5E\u6027\u662F\u6709\u4F18\u5148\u7EA7\u987A\u5E8F\u7684\uFF0C\u5148\u6309\u4F4E\u4F18\u5148\u7EA7\u6392\u5E8F\uFF0C\u518D\u6309\u9AD8\u4F18\u5148\u7EA7\u6392\u5E8F\u3002\u6700\u540E\u7684\u6B21\u5E8F\u5C31\u662F\u9AD8\u4F18\u5148\u7EA7\u9AD8\u7684\u5728\u524D\uFF0C\u9AD8\u4F18\u5148\u7EA7\u76F8\u540C\u7684\u4F4E\u4F18\u5148\u7EA7\u9AD8\u7684\u5728\u524D\u3002\u57FA\u6570\u6392\u5E8F\u57FA\u4E8E\u5206\u522B\u6392\u5E8F\uFF0C\u5206\u522B\u6536\u96C6\uFF0C\u6240\u4EE5\u662F\u7A33\u5B9A\u7684\u3002</p><p>\u7B97\u6CD5\u63CF\u8FF0\uFF1A</p><ul><li>\u53D6\u5F97\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u6570\uFF0C\u5E76\u53D6\u5F97\u4F4D\u6570\uFF1B</li><li>arr\u4E3A\u539F\u59CB\u6570\u7EC4\uFF0C\u4ECE\u6700\u4F4E\u4F4D\u5F00\u59CB\u53D6\u6BCF\u4E2A\u4F4D\u7EC4\u6210radix\u6570\u7EC4\uFF1B</li><li>\u5BF9radix\u8FDB\u884C\u8BA1\u6570\u6392\u5E8F\uFF08\u5229\u7528\u8BA1\u6570\u6392\u5E8F\u9002\u7528\u4E8E\u5C0F\u8303\u56F4\u6570\u7684\u7279\u70B9\uFF09\uFF1B</li></ul><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">RadixSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token comment">// 1.\u5148\u7B97\u51FA\u6700\u5927\u6570\u7684\u4F4D\u6570\uFF1B</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> maxDigit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>max <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        maxDigit<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> div <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> bucketList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        bucketList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> maxDigit<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> mod <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">,</span> div <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">%</span> mod<span class="token punctuation">)</span> <span class="token operator">/</span> div<span class="token punctuation">;</span>
            bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> bucketList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                array<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BA1\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u8BA1\u6570\u6392\u5E8F</h3><p>\u8BA1\u6570\u6392\u5E8F\u7684\u6838\u5FC3\u5728\u4E8E\u5C06\u8F93\u5165\u7684\u6570\u636E\u503C\u8F6C\u5316\u4E3A\u952E\u5B58\u50A8\u5728\u989D\u5916\u5F00\u8F9F\u7684\u6570\u7EC4\u7A7A\u95F4\u4E2D\u3002 \u4F5C\u4E3A\u4E00\u79CD\u7EBF\u6027\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u6392\u5E8F\uFF0C\u8BA1\u6570\u6392\u5E8F\u8981\u6C42\u8F93\u5165\u7684\u6570\u636E\u5FC5\u987B\u662F\u6709\u786E\u5B9A\u8303\u56F4\u7684\u6574\u6570\u3002</p><p>\u8BA1\u6570\u6392\u5E8F(Counting sort)\u662F\u4E00\u79CD\u7A33\u5B9A\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u8BA1\u6570\u6392\u5E8F\u4F7F\u7528\u4E00\u4E2A\u989D\u5916\u7684\u6570\u7EC4C\uFF0C\u5176\u4E2D\u7B2Ci\u4E2A\u5143\u7D20\u662F\u5F85\u6392\u5E8F\u6570\u7EC4A\u4E2D\u503C\u7B49\u4E8Ei\u7684\u5143\u7D20\u7684\u4E2A\u6570\u3002\u7136\u540E\u6839\u636E\u6570\u7EC4C\u6765\u5C06A\u4E2D\u7684\u5143\u7D20\u6392\u5230\u6B63\u786E\u7684\u4F4D\u7F6E\u3002\u5B83\u53EA\u80FD\u5BF9\u6574\u6570\u8FDB\u884C\u6392\u5E8F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">CountingSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token keyword">int</span> bias<span class="token punctuation">,</span> min <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> max<span class="token punctuation">)</span>
            max <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> min<span class="token punctuation">)</span>
            min <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    bias <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">-</span> min<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucket<span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> bias<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">-</span> bias<span class="token punctuation">;</span>
            bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h3><p>\u5FEB\u901F\u6392\u5E8F\u662F\u7531<strong>\u5192\u6CE1\u6392\u5E8F</strong>\u6539\u8FDB\u800C\u5F97\u5230\u7684\uFF0C\u662F\u4E00\u79CD\u6392\u5E8F\u6267\u884C\u6548\u7387\u5F88\u9AD8\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5B83\u5229\u7528<strong>\u5206\u6CBB\u6CD5</strong>\u6765\u5BF9\u5F85\u6392\u5E8F\u5E8F\u5217\u8FDB\u884C\u5206\u6CBB\u6392\u5E8F\uFF0C\u5B83\u7684\u601D\u60F3\u4E3B\u8981\u662F\u901A\u8FC7\u4E00\u8D9F\u6392\u5E8F\u5C06\u5F85\u6392\u8BB0\u5F55\u5206\u9694\u6210\u72EC\u7ACB\u7684\u4E24\u90E8\u5206\uFF0C\u5176\u4E2D\u7684\u4E00\u90E8\u5206\u6BD4\u5173\u952E\u5B57\u5C0F\uFF0C\u540E\u9762\u4E00\u90E8\u5206\u6BD4\u5173\u952E\u5B57\u5927\uFF0C\u7136\u540E\u518D\u5BF9\u8FD9\u524D\u540E\u7684\u4E24\u90E8\u5206\u5206\u522B\u91C7\u7528\u8FD9\u79CD\u65B9\u5F0F\u8FDB\u884C\u6392\u5E8F\uFF0C\u901A\u8FC7\u9012\u5F52\u7684\u8FD0\u7B97\u6700\u7EC8\u8FBE\u5230\u6574\u4E2A\u5E8F\u5217\u6709\u5E8F\u3002</p><p>\u5FEB\u901F\u6392\u5E8F\u7684\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><ol><li>\u5728\u5F85\u6392\u5E8F\u7684N\u4E2A\u8BB0\u5F55\u4E2D\u4EFB\u53D6\u4E00\u4E2A\u5143\u7D20\uFF08\u901A\u5E38\u53D6\u7B2C\u4E00\u4E2A\u8BB0\u5F55\uFF09\u4F5C\u4E3A\u57FA\u51C6\uFF0C\u79F0\u4E3A\u57FA\u51C6\u8BB0\u5F55\uFF1B</li><li>\u5B9A\u4E49\u4E24\u4E2A\u7D22\u5F15 left \u548C right \u5206\u522B\u8868\u793A\u9996\u7D22\u5F15\u548C\u5C3E\u7D22\u5F15\uFF0Ckey \u8868\u793A\u57FA\u51C6\u503C\uFF1B</li><li>\u9996\u5148\uFF0C\u5C3E\u7D22\u5F15\u5411\u524D\u626B\u63CF\uFF0C\u76F4\u5230\u627E\u5230\u6BD4\u57FA\u51C6\u503C\u5C0F\u7684\u8BB0\u5F55\uFF0C\u5E76\u66FF\u6362\u9996\u7D22\u5F15\u5BF9\u5E94\u7684\u503C\uFF1B</li><li>\u7136\u540E\uFF0C\u9996\u7D22\u5F15\u5411\u540E\u626B\u63CF\uFF0C\u76F4\u5230\u627E\u5230\u6BD4\u57FA\u51C6\u503C\u5927\u4E8E\u7684\u8BB0\u5F55\uFF0C\u5E76\u66FF\u6362\u5C3E\u7D22\u5F15\u5BF9\u5E94\u7684\u503C\uFF1B</li><li>\u82E5\u5728\u626B\u63CF\u8FC7\u7A0B\u4E2D\u9996\u7D22\u5F15\u7B49\u4E8E\u5C3E\u7D22\u5F15(left = right)\uFF0C\u5219\u4E00\u8D9F\u6392\u5E8F\u7ED3\u675F\uFF1B\u5C06\u57FA\u51C6\u503C(key)\u66FF\u6362\u9996\u7D22\u5F15\u6240\u5BF9\u5E94\u7684\u503C\uFF1B</li><li>\u518D\u8FDB\u884C\u4E0B\u4E00\u8D9F\u6392\u5E8F\u65F6\uFF0C\u5F85\u6392\u5E8F\u5217\u88AB\u5206\u6210\u4E24\u4E2A\u533A\uFF1A[0,left-1]\u548C[righ+1,end]</li><li>\u5BF9\u6BCF\u4E00\u4E2A\u5206\u533A\u91CD\u590D\u4EE5\u4E0A\u6B65\u9AA4\uFF0C\u76F4\u5230\u6240\u6709\u5206\u533A\u4E2D\u7684\u8BB0\u5F55\u90FD\u6709\u5E8F\uFF0C\u6392\u5E8F\u5B8C\u6210</li></ol><p>\u5FEB\u6392\u4E3A\u4EC0\u4E48\u6BD4\u5192\u6CE1\u6548\u7387\u9AD8\uFF1F</p><p>\u5FEB\u901F\u6392\u5E8F\u4E4B\u6240\u4EE5\u6BD4\u8F83\u5FEB\uFF0C\u662F\u56E0\u4E3A\u76F8\u6BD4\u5192\u6CE1\u6392\u5E8F\uFF0C\u6BCF\u6B21\u7684\u4EA4\u6362\u90FD\u662F\u8DF3\u8DC3\u5F0F\u7684\uFF0C\u6BCF\u6B21\u8BBE\u7F6E\u4E00\u4E2A\u57FA\u51C6\u503C\uFF0C\u5C06\u5C0F\u4E8E\u57FA\u51C6\u503C\u7684\u90FD\u4EA4\u6362\u5230\u5DE6\u8FB9\uFF0C\u5927\u4E8E\u57FA\u51C6\u503C\u7684\u90FD\u4EA4\u6362\u5230\u53F3\u8FB9\uFF0C\u8FD9\u6837\u4E0D\u4F1A\u50CF\u5192\u6CE1\u4E00\u6837\u6BCF\u6B21\u90FD\u53EA\u4EA4\u6362\u76F8\u90BB\u7684\u4E24\u4E2A\u6570\uFF0C\u56E0\u6B64\u6BD4\u8F83\u548C\u4EA4\u6362\u7684\u6B64\u6570\u90FD\u53D8\u5C11\u4E86\uFF0C\u901F\u5EA6\u81EA\u7136\u66F4\u9AD8\u3002</p><p>\u5FEB\u901F\u6392\u5E8F\u7684\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(nlgn)\uFF0C\u6700\u574F\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(n^2)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">quickSortHelper</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">quickSortHelper</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//j\u5148\u8D70\uFF0C\u6700\u7EC8\u5FAA\u73AF\u7EC8\u6B62\u65F6\uFF0Cj\u505C\u7559\u7684\u4F4D\u7F6E\u5C31\u662Farr[left]\u7684\u6B63\u786E\u4F4D\u7F6E</span>
            <span class="token comment">//\u6539\u4E3Ai&lt;=j\uFF0C\u5219\u4F1A\u8FDB\u5165\u6B7B\u5FAA\u73AF\uFF0C[1,5,5,5,5]-&gt;[1] 5 [5,5,5]-&gt;[5,5,5]\uFF0C\u4F1A\u6B7B\u5FAA\u73AF</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                j<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> tmp1 <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp1<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//\u5F53\u5FAA\u73AF\u7EC8\u6B62\u7684\u65F6\u5019\uFF0Ci=j\uFF0C\u56E0\u4E3A\u662Fj\u5148\u8D70\u7684\uFF0Cj\u6240\u5728\u4F4D\u7F6E\u7684\u503C\u5C0F\u4E8Earr[left]\uFF0C\u4EA4\u6362arr[j]\u548Carr[left]</span>
        arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>

        <span class="token function">quickSortHelper</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">quickSortHelper</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h3><p>\u5F52\u5E76\u6392\u5E8F (merge sort) \u662F\u4E00\u7C7B\u4E0E\u63D2\u5165\u6392\u5E8F\u3001\u4EA4\u6362\u6392\u5E8F\u3001\u9009\u62E9\u6392\u5E8F\u4E0D\u540C\u7684\u53E6\u4E00\u79CD\u6392\u5E8F\u65B9\u6CD5\u3002\u5F52\u5E76\u7684\u542B\u4E49\u662F\u5C06\u4E24\u4E2A\u6216\u4E24\u4E2A\u4EE5\u4E0A\u7684\u6709\u5E8F\u8868\u5408\u5E76\u6210\u4E00\u4E2A\u65B0\u7684\u6709\u5E8F\u8868\u3002\u5F52\u5E76\u6392\u5E8F\u6709\u591A\u8DEF\u5F52\u5E76\u6392\u5E8F\u3001\u4E24\u8DEF\u5F52\u5E76\u6392\u5E8F \uFF0C \u53EF\u7528\u4E8E\u5185\u6392\u5E8F\uFF0C\u4E5F\u53EF\u4EE5\u7528\u4E8E\u5916\u6392\u5E8F\u3002</p><p>\u4E24\u8DEF\u5F52\u5E76\u6392\u5E8F\u7B97\u6CD5\u601D\u8DEF\u662F\u9012\u5F52\u5904\u7406\u3002\u6BCF\u4E2A\u9012\u5F52\u8FC7\u7A0B\u6D89\u53CA\u4E09\u4E2A\u6B65\u9AA4</p><ul><li>\u5206\u89E3\uFF1A \u628A\u5F85\u6392\u5E8F\u7684 n \u4E2A\u5143\u7D20\u7684\u5E8F\u5217\u5206\u89E3\u6210\u4E24\u4E2A\u5B50\u5E8F\u5217\uFF0C \u6BCF\u4E2A\u5B50\u5E8F\u5217\u5305\u62EC n/2 \u4E2A\u5143\u7D20</li><li>\u6CBB\u7406\uFF1A \u5BF9\u6BCF\u4E2A\u5B50\u5E8F\u5217\u5206\u522B\u8C03\u7528\u5F52\u5E76\u6392\u5E8FMergeSort\uFF0C \u8FDB\u884C\u9012\u5F52\u64CD\u4F5C</li><li>\u5408\u5E76\uFF1A \u5408\u5E76\u4E24\u4E2A\u6392\u597D\u5E8F\u7684\u5B50\u5E8F\u5217\uFF0C\u751F\u6210\u6392\u5E8F\u7ED3\u679C</li></ul><p><img src="http://img.dabin-coder.cn/image/20220327151830.png" alt="" loading="lazy"></p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5BF9\u957F\u5EA6\u4E3An\u7684\u5E8F\u5217\uFF0C\u9700\u8FDB\u884Clogn\u6B21\u4E8C\u8DEF\u5F52\u5E76\uFF0C\u6BCF\u6B21\u5F52\u5E76\u7684\u65F6\u95F4\u4E3AO(n)\uFF0C\u6545\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(nlgn)\u3002</p><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A\u5F52\u5E76\u6392\u5E8F\u9700\u8981\u8F85\u52A9\u7A7A\u95F4\u6765\u6682\u5B58\u4E24\u4E2A\u6709\u5E8F\u5B50\u5E8F\u5217\u5F52\u5E76\u7684\u7ED3\u679C\uFF0C\u6545\u5176\u8F85\u52A9\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3AO(n)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MergeSort</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> arr<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u8F85\u52A9\u6570\u7EC4</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tmpArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> tmpArr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tmpArr<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> tmpArr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> tmpArr<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">merge</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> tmpArr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tmpArr<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> tmpIndex <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tmpArr<span class="token punctuation">[</span>tmpIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                tmpArr<span class="token punctuation">[</span>tmpIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tmpArr<span class="token punctuation">[</span>tmpIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tmpArr<span class="token punctuation">[</span>tmpIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> m <span class="token operator">=</span> left<span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> right<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> tmpArr<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5806\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5806\u6392\u5E8F" aria-hidden="true">#</a> \u5806\u6392\u5E8F</h3><p>\u5806\u662F\u5177\u6709\u4E0B\u5217\u6027\u8D28\u7684\u5B8C\u5168\u4E8C\u53C9\u6811\uFF1A\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u90FD\u5927\u4E8E\u6216\u7B49\u4E8E\u5176\u5DE6\u53F3\u5B69\u5B50\u7ED3\u70B9\u7684\u503C\uFF0C\u79F0\u4E3A\u5927\u9876\u5806\uFF1B\u6216\u8005\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u90FD\u5C0F\u4E8E\u6216\u7B49\u4E8E\u5176\u5DE6\u53F3\u5B69\u5B50\u7ED3\u70B9\u7684\u503C\uFF0C\u79F0\u4E3A\u5C0F\u9876\u5806\u3002</p><p><img src="https://img-blog.csdn.net/20150312212515074" alt="" loading="lazy"></p><p><strong>Top\u5927\u95EE\u9898</strong>\u89E3\u51B3\u601D\u8DEF\uFF1A\u4F7F\u7528\u4E00\u4E2A\u56FA\u5B9A\u5927\u5C0F\u7684<strong>\u6700\u5C0F\u5806</strong>\uFF0C\u5F53\u5806\u6EE1\u540E\uFF0C\u6BCF\u6B21\u6DFB\u52A0\u6570\u636E\u7684\u65F6\u5019\u4E0E\u5806\u9876\u5143\u7D20\u6BD4\u8F83\uFF0C\u82E5\u5C0F\u4E8E\u5806\u9876\u5143\u7D20\uFF0C\u5219\u820D\u5F03\uFF0C\u82E5\u5927\u4E8E\u5806\u9876\u5143\u7D20\uFF0C\u5219\u5220\u9664\u5806\u9876\u5143\u7D20\uFF0C\u6DFB\u52A0\u65B0\u589E\u5143\u7D20\uFF0C\u5BF9\u5806\u8FDB\u884C\u91CD\u65B0\u6392\u5E8F\u3002</p><p>\u5BF9\u4E8En\u4E2A\u6570\uFF0C\u53D6Top m\u4E2A\u6570\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(nlogm)\uFF0C\u8FD9\u6837\u5728n\u8F83\u5927\u60C5\u51B5\u4E0B\uFF0C\u662F\u4F18\u4E8Enlogn\uFF08\u5176\u4ED6\u6392\u5E8F\u7B97\u6CD5\uFF09\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u3002</p><p>PriorityQueue \u662F\u4E00\u79CD\u57FA\u4E8E\u4F18\u5148\u7EA7\u5806\u7684\u4F18\u5148\u7EA7\u961F\u5217\u3002\u6BCF\u6B21\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u7684\u662F\u5177\u6709\u6700\u9AD8\u4F18\u5148\u6743\u7684\u5143\u7D20\u3002\u5982\u679C\u4E0D\u63D0\u4F9BComparator\u7684\u8BDD\uFF0C\u4F18\u5148\u961F\u5217\u4E2D\u5143\u7D20\u9ED8\u8BA4\u6309\u81EA\u7136\u987A\u5E8F\u6392\u5217\uFF0C\u4E5F\u5C31\u662F\u6570\u5B57\u9ED8\u8BA4\u662F\u5C0F\u7684\u5728\u961F\u5217\u5934\u3002\u4F18\u5148\u7EA7\u961F\u5217\u7528\u6570\u7EC4\u5B9E\u73B0\uFF0C\u4F46\u662F\u6570\u7EC4\u5927\u5C0F\u53EF\u4EE5\u52A8\u6001\u589E\u52A0\uFF0C\u5BB9\u91CF\u65E0\u9650\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u627E\u51FA\u524Dk\u4E2A\u6700\u5927\u6570\uFF0C\u91C7\u7528\u5C0F\u9876\u5806\u5B9E\u73B0</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">findKMax</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u961F\u5217\u9ED8\u8BA4\u81EA\u7136\u987A\u5E8F\u6392\u5217\uFF0C\u5C0F\u9876\u5806\uFF0C\u4E0D\u5FC5\u91CD\u5199compare</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pq<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u5982\u679C\u5806\u9876\u5143\u7D20 &lt; \u65B0\u6570\uFF0C\u5219\u5220\u9664\u5806\u9876\uFF0C\u52A0\u5165\u65B0\u6570\u5165\u5806</span>
            pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pq<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>pq<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><p>\u52A8\u6001\u89C4\u5212\u5E38\u5E38\u9002\u7528\u4E8E\u6709\u91CD\u53E0\u5B50\u95EE\u9898\u7684\u95EE\u9898\u3002\u52A8\u6001\u89C4\u5212\u7684\u57FA\u672C\u601D\u60F3\uFF1A\u82E5\u8981\u89E3\u4E00\u4E2A\u7ED9\u5B9A\u95EE\u9898\uFF0C\u6211\u4EEC\u9700\u8981\u89E3\u5176\u4E0D\u540C\u90E8\u5206\uFF08\u5373\u5B50\u95EE\u9898\uFF09\uFF0C\u518D\u6839\u636E\u5B50\u95EE\u9898\u7684\u89E3\u4EE5\u5F97\u51FA\u539F\u95EE\u9898\u7684\u89E3\u3002</p><p>\u52A8\u6001\u89C4\u5212\u6CD5\u8BD5\u56FE\u4EC5\u4EC5\u89E3\u51B3\u6BCF\u4E2A\u5B50\u95EE\u9898\u4E00\u6B21\uFF0C\u4E00\u65E6\u67D0\u4E2A\u7ED9\u5B9A\u5B50\u95EE\u9898\u7684\u89E3\u5DF2\u7ECF\u7B97\u51FA\uFF0C\u5219\u5C06\u5176\u8BB0\u5FC6\u5316\u5B58\u50A8\uFF0C\u4EE5\u4FBF\u4E0B\u6B21\u9047\u5230\u540C\u4E00\u4E2A\u5B50\u95EE\u9898\u7684\u65F6\u5019\u76F4\u63A5\u67E5\u8868\u5F97\u5230\u89E3\u3002</p><p>\u52A8\u6001\u89C4\u5212\u7684\u89E3\u9898\u601D\u8DEF\uFF1A1\u3001\u72B6\u6001\u5B9A\u4E49\uFF1B2\u3001\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF1B3\u3001\u521D\u59CB\u72B6\u6001\u3002</p><h3 id="\u4E0D\u540C\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u540C\u8DEF\u5F84" aria-hidden="true">#</a> \u4E0D\u540C\u8DEF\u5F84</h3>`,92),d=p("\u4E0D\u540C\u8DEF\u5F84"),v=s(`<h3 id="\u6700\u957F\u56DE\u6587\u5B50\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6700\u957F\u56DE\u6587\u5B50\u4E32" aria-hidden="true">#</a> \u6700\u957F\u56DE\u6587\u5B50\u4E32</h3><p>\u4ECE\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32 <code>s</code> \u4E2D\u627E\u5230\u6700\u957F\u7684\u56DE\u6587\u5B50\u4E32\u7684\u957F\u5EA6\u3002</p><p>\u4F8B\u5982 <code>s = &quot;babbad&quot;</code> \u7684\u6700\u957F\u56DE\u6587\u5B50\u4E32\u662F <code>&quot;abba&quot;</code> \uFF0C\u957F\u5EA6\u662F <code>4</code> \u3002</p><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li><p>\u5B9A\u4E49\u72B6\u6001\u3002<code>dp[i][j]</code> \u8868\u793A\u5B50\u4E32 <code>s[i..j]</code> \u662F\u5426\u4E3A\u56DE\u6587\u5B50\u4E32</p></li><li><p>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF1A<code>dp[i][j] = (s[i] == s[j]) and dp[i + 1][j - 1]</code></p></li><li><p>\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u5355\u4E2A\u5B57\u7B26\u4E00\u5B9A\u662F\u56DE\u6587\u4E32\uFF0C\u56E0\u6B64\u628A\u5BF9\u89D2\u7EBF\u5148\u521D\u59CB\u5316\u4E3A <code>true</code>\uFF0C\u5373 <code>dp[i][i] = true</code> \u3002</p></li><li><p>\u53EA\u8981\u4E00\u5F97\u5230 <code>dp[i][j] = true</code>\uFF0C\u5C31\u8BB0\u5F55\u5B50\u4E32\u7684\u957F\u5EA6\u548C\u8D77\u59CB\u4F4D\u7F6E</p></li></ol><p>\u6CE8\u610F\u4E8B\u9879\uFF1A\u603B\u662F\u5148\u5F97\u5230\u5C0F\u5B50\u4E32\u7684\u56DE\u6587\u5224\u5B9A\uFF0C\u7136\u540E\u5927\u5B50\u4E32\u624D\u80FD\u53C2\u8003\u5C0F\u5B50\u4E32\u7684\u5224\u65AD\u7ED3\u679C\uFF0C\u5373\u586B\u8868\u987A\u5E8F\u5F88\u91CD\u8981\u3002</p><p><img src="http://img.dabin-coder.cn/image/image-20201115230411764.png" alt="" loading="lazy"></p><p>\u65F6\u95F4\u590D\u6742\u5EA6O(N2)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6O(N2)\uFF0C\u56E0\u4E3A\u4F7F\u7528\u4E86\u4E8C\u7EF4\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">longestPalindrome</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7279\u5224</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> s<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> maxLen <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> begin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">// dp[i][j] \u8868\u793A s[i, j] \u662F\u5426\u662F\u56DE\u6587\u4E32</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> charArray <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>charArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> charArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// \u53EA\u8981 dp[i][j] == true \u6210\u7ACB\uFF0C\u5C31\u8868\u793A\u5B50\u4E32 s[i..j] \u662F\u56DE\u6587\uFF0C\u6B64\u65F6\u8BB0\u5F55\u56DE\u6587\u957F\u5EA6\u548C\u8D77\u59CB\u4F4D\u7F6E</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">-</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> maxLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    maxLen <span class="token operator">=</span> j <span class="token operator">-</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    begin <span class="token operator">=</span> i<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> begin <span class="token operator">+</span> maxLen<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//substring(i, j)\u622A\u53D6i\u5230j(\u4E0D\u5305\u542Bj)\u7684\u5B57\u7B26\u4E32</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6700\u5927\u5B50\u6570\u7EC4\u548C" tabindex="-1"><a class="header-anchor" href="#\u6700\u5927\u5B50\u6570\u7EC4\u548C" aria-hidden="true">#</a> \u6700\u5927\u5B50\u6570\u7EC4\u548C</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong>\uFF1A\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 <code>nums</code> \uFF0C\u8BF7\u4F60\u627E\u51FA\u4E00\u4E2A\u5177\u6709\u6700\u5927\u548C\u7684\u8FDE\u7EED\u5B50\u6570\u7EC4\uFF08\u5B50\u6570\u7EC4\u6700\u5C11\u5305\u542B\u4E00\u4E2A\u5143\u7D20\uFF09\uFF0C\u8FD4\u56DE\u5176\u6700\u5927\u548C\u3002</p><p><strong>\u793A\u4F8B</strong>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1A nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A <span class="token number">6</span>
\u89E3\u91CA\uFF1A \u8FDE\u7EED\u5B50\u6570\u7EC4 <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> \u7684\u548C\u6700\u5927\uFF0C\u4E3A <span class="token number">6</span> \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1\u3001\u9996\u5148\u786E\u5B9Adp\u6570\u7EC4\uFF08dp table\uFF09\u4EE5\u53CA\u4E0B\u6807\u7684\u542B\u4E49\u3002</p><p>dp[i]\u8868\u793A\u4EE5nums[i]\u7ED3\u5C3E\u7684\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C\u3002</p><p>2\u3001\u786E\u5B9A\u9012\u63A8\u516C\u5F0F\u3002</p><p><code>dp[i] = dp[i - 1] &gt; 0 ? ( dp[i - 1] + nums[i]) : nums[i]</code></p><p>dp[i+1]\u53D6\u51B3\u4E8Edp[i]\u7684\u503C\uFF0C\u4E0D\u9700\u8981\u4F7F\u7528\u6570\u7EC4\u4FDD\u5B58\u72B6\u6001\uFF0C\u53EA\u9700\u8981\u4E00\u4E2A\u53D8\u91CFsum\u6765\u4FDD\u5B58\u4E0A\u4E00\u4E2A\u72B6\u6001\u5373\u53EF\u3002</p><p>3\u3001dp\u6570\u7EC4\u5982\u4F55\u521D\u59CB\u5316\u3002</p><p>\u4ECE\u9012\u63A8\u516C\u5F0F\u53EF\u4EE5\u770B\u51FA\u6765dp[i]\u662F\u4F9D\u8D56\u4E8Edp[i - 1]\u7684\u72B6\u6001\uFF0Cdp[0]\u5C31\u662F\u9012\u63A8\u516C\u5F0F\u7684\u57FA\u7840\u3002</p><p>dp[0]\u5E94\u8BE5\u662F\u591A\u5C11\u5462\uFF1F\u6839\u636Edp[i]\u7684\u5B9A\u4E49\uFF0C\u5F88\u660E\u663Edp[0]\u5E94\u4E3Anums[0]\u5373dp[0] = nums[0]\u3002</p><p>\u793A\u4F8B\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxSubArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> max <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> num<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                sum <span class="token operator">=</span> num<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> max<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217" aria-hidden="true">#</a> \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217</h3><p>\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684 \u5B50\u5E8F\u5217 \u662F\u6307\u8FD9\u6837\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF1A\u5B83\u662F\u7531\u539F\u5B57\u7B26\u4E32\u5728\u4E0D\u6539\u53D8\u5B57\u7B26\u7684\u76F8\u5BF9\u987A\u5E8F\u7684\u60C5\u51B5\u4E0B\u5220\u9664\u67D0\u4E9B\u5B57\u7B26\uFF08\u4E5F\u53EF\u4EE5\u4E0D\u5220\u9664\u4EFB\u4F55\u5B57\u7B26\uFF09\u540E\u7EC4\u6210\u7684\u65B0\u5B57\u7B26\u4E32\u3002 \u4F8B\u5982\uFF0C&quot;ace&quot; \u662F &quot;abcde&quot; \u7684\u5B50\u5E8F\u5217\uFF0C\u4F46 &quot;aec&quot; \u4E0D\u662F &quot;abcde&quot; \u7684\u5B50\u5E8F\u5217\u3002</p><p>\u52A8\u6001\u89C4\u5212\u3002<code>dp[i][j]</code>\u8868\u793Atext1\u4EE5i-1\u7ED3\u5C3E\u7684\u5B50\u4E32\u548Ctext2\u4EE5j-1\u7ED3\u5C3E\u7684\u5B50\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002dp\u6A2A\u5750\u6807\u6216\u7EB5\u5750\u6807\u4E3A0\u8868\u793A\u7A7A\u5B57\u7B26\u4E32\uFF0C<code>dp[0][j] = dp[i][0] = 0</code>\uFF0C\u65E0\u9700\u989D\u5916\u5904\u7406base case\u3002</p><p><img src="http://img.dabin-coder.cn/image/longestCommonSubsequence.png" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">longestCommonSubsequence</span><span class="token punctuation">(</span><span class="token class-name">String</span> text1<span class="token punctuation">,</span> <span class="token class-name">String</span> text2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> text1<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> text2<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//dp[0][x]\u548Cdp[x][0]\u8868\u793A\u6709\u4E00\u4E2A\u4E3A\u7A7A\u5B57\u7B26\u4E32</span>
        <span class="token comment">//dp[1][1]\u4E3Atext1\u7B2C\u4E00\u4E2A\u5B57\u7B26\u548Ctext2\u7B2C\u4E00\u4E2A\u5B57\u7B26\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6</span>
        <span class="token comment">//dp[i][j]\u8868\u793Atext1\u4EE5i-1\u7ED3\u5C3E\u7684\u5B50\u4E32\u548Ctext2\u4EE5j-1\u7ED3\u5C3E\u7684\u5B50\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6</span>
        <span class="token keyword">int</span> len1 <span class="token operator">=</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> len2 <span class="token operator">=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> arr2<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>len1<span class="token punctuation">]</span><span class="token punctuation">[</span>len2<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>dp[i][j]</code>\u8868\u793Atext1\u4EE5i\u7ED3\u5C3E\u7684\u5B50\u4E32\u548Ctext2\u4EE5j\u7ED3\u5C3E\u7684\u5B50\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002\u9700\u8981\u5904\u7406base case\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">longestCommonSubsequence</span><span class="token punctuation">(</span><span class="token class-name">String</span> text1<span class="token punctuation">,</span> <span class="token class-name">String</span> text2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> text1<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> text2<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> len1 <span class="token operator">=</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> len2 <span class="token operator">=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//\`dp[i][j]\`\u8868\u793Atext1\u4EE5i\u7ED3\u5C3E\u7684\u5B50\u4E32\u548Ctext2\u4EE5j\u7ED3\u5C3E\u7684\u5B50\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len1<span class="token punctuation">]</span><span class="token punctuation">[</span>len2<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len2<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> arr2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>len1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>len2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A5\u96E8\u6C34" tabindex="-1"><a class="header-anchor" href="#\u63A5\u96E8\u6C34" aria-hidden="true">#</a> \u63A5\u96E8\u6C34</h3><p>\u7ED9\u5B9A <code>n</code> \u4E2A\u975E\u8D1F\u6574\u6570\u8868\u793A\u6BCF\u4E2A\u5BBD\u5EA6\u4E3A <code>1</code> \u7684\u67F1\u5B50\u7684\u9AD8\u5EA6\u56FE\uFF0C\u8BA1\u7B97\u6309\u6B64\u6392\u5217\u7684\u67F1\u5B50\uFF0C\u4E0B\u96E8\u4E4B\u540E\u80FD\u63A5\u591A\u5C11\u96E8\u6C34\u3002</p><p><img src="http://img.dabin-coder.cn/image/\u63A5\u96E8\u6C34.png" alt="" loading="lazy"></p><p>\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Aheight <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token number">6</span>
\u89E3\u91CA\uFF1A\u4E0A\u9762\u662F\u7531\u6570\u7EC4 <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> \u8868\u793A\u7684\u9AD8\u5EA6\u56FE\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u63A5 <span class="token number">6</span> \u4E2A\u5355\u4F4D\u7684\u96E8\u6C34\uFF08\u84DD\u8272\u90E8\u5206\u8868\u793A\u96E8\u6C34\uFF09\u3002 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A8\u6001\u89C4\u5212\uFF0C\u4F7F\u7528\u4E24\u4E2A\u6570\u7EC4\u7A7A\u95F4\u3002leftMax[i] \u4EE3\u8868\u7B2C <code>i</code> \u5217\u5DE6\u8FB9\uFF08\u4E0D\u5305\u542B\u81EA\u8EAB\uFF09\u6700\u9AD8\u7684\u5899\u7684\u9AD8\u5EA6\uFF0CrightMax[i] \u4EE3\u8868\u7B2C <code>i</code> \u5217\u53F3\u8FB9\u6700\u9AD8\u7684\u5899\u7684\u9AD8\u5EA6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">trap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> height<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> leftMax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rightMax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            leftMax<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>leftMax<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rightMax<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>rightMax<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> min <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>leftMax<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> rightMax<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">&gt;</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">+=</span> min <span class="token operator">-</span> height<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5355\u8BCD\u62C6\u5206" tabindex="-1"><a class="header-anchor" href="#\u5355\u8BCD\u62C6\u5206" aria-hidden="true">#</a> \u5355\u8BCD\u62C6\u5206</h3><p><img src="http://img.dabin-coder.cn/image/word-break.png" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">wordBreak</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> wordDict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> maxw <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//dp[i]\u8868\u793A\u524Di\u4E2A\u5B57\u6BCD\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u662F\u5426\u53EF\u4EE5\u88AB\u62C6\u5206</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u521D\u59CB\u5316\u6761\u4EF6</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> wordDict<span class="token punctuation">)</span><span class="token punctuation">{</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            maxw <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxw<span class="token punctuation">,</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;=</span> i <span class="token operator">-</span> maxw<span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> set<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DE\u6EAF\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF\u7B97\u6CD5" aria-hidden="true">#</a> \u56DE\u6EAF\u7B97\u6CD5</h2><p>\u56DE\u6EAF\u7B97\u6CD5\u7684\u57FA\u672C\u601D\u60F3\u662F\uFF1A\u4ECE\u4E00\u6761\u8DEF\u5F80\u524D\u8D70\uFF0C\u80FD\u8FDB\u5219\u8FDB\uFF0C\u4E0D\u80FD\u8FDB\u5219\u9000\u56DE\u6765\uFF0C\u6362\u4E00\u6761\u8DEF\u518D\u8BD5\u3002</p><h3 id="\u7EC4\u5408\u603B\u548C" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408\u603B\u548C" aria-hidden="true">#</a> \u7EC4\u5408\u603B\u548C</h3><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A<strong>\u65E0\u91CD\u590D\u5143\u7D20</strong>\u7684\u6570\u7EC4 <code>candidates</code> \u548C\u4E00\u4E2A\u76EE\u6807\u6570 <code>target</code> \uFF0C\u627E\u51FA <code>candidates</code> \u4E2D\u6240\u6709\u53EF\u4EE5\u4F7F\u6570\u5B57\u548C\u4E3A <code>target</code> \u7684\u7EC4\u5408\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Acandidates = [2,3,6,7], target = 7,
\u8F93\u51FA\uFF1A
[
  [7],
  [2,2,3]
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u56DE\u6EAF\u7B97\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">combinationSum2</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candidates<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>candidates <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> candidates<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>candidates<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6392\u5E8F\u65B9\u4FBF\u56DE\u6EAF\u526A\u679D</span>
        <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u4F5C\u4E3A\u6808\u6765\u4F7F\u7528\uFF0C\u6548\u7387\u9AD8\u4E8EStack\uFF1B\u4E5F\u53EF\u4EE5\u4F5C\u4E3A\u961F\u5217\u6765\u4F7F\u7528\uFF0C\u6548\u7387\u9AD8\u4E8ELinkedList\uFF1B\u7EBF\u7A0B\u4E0D\u5B89\u5168</span>
        <span class="token function">combinationSum2Helper</span><span class="token punctuation">(</span>candidates<span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">combinationSum2Helper</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u526A\u679D</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> start <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u5728\u4E00\u4E2A\u5C42\u7EA7\uFF0C\u4F1A\u4EA7\u751F\u91CD\u590D</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            path<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">combinationSum2Helper</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> target <span class="token operator">-</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            path<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5168\u6392\u5217" tabindex="-1"><a class="header-anchor" href="#\u5168\u6392\u5217" aria-hidden="true">#</a> \u5168\u6392\u5217</h3><p>\u7ED9\u5B9A\u4E00\u4E2A <strong>\u6CA1\u6709\u91CD\u590D</strong> \u6570\u5B57\u7684\u5E8F\u5217\uFF0C\u8FD4\u56DE\u5176\u6240\u6709\u53EF\u80FD\u7684\u5168\u6392\u5217\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: [1,2,3]
\u8F93\u51FA:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u56DE\u6EAF\u3002\u6CE8\u610F\u4E0E\u7EC4\u5408\u603B\u548C\u7684\u533A\u522B\uFF08\u6570\u5B57\u6709\u65E0\u987A\u5E8F\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">permute</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> flag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">permuteHelper</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> flag<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">permuteHelper</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> flag<span class="token punctuation">,</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token comment">//\u7EE7\u7EED\u5FAA\u73AF</span>
            <span class="token punctuation">}</span>
            path<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">permuteHelper</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> flag<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            path<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5168\u6392\u5217ii" tabindex="-1"><a class="header-anchor" href="#\u5168\u6392\u5217ii" aria-hidden="true">#</a> \u5168\u6392\u5217II</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u53EF\u5305\u542B\u91CD\u590D\u6570\u5B57\u7684\u5E8F\u5217\uFF0C\u8FD4\u56DE\u6240\u6709\u4E0D\u91CD\u590D\u7684\u5168\u6392\u5217\u3002\u6CE8\u610F\u4E0E\u7EC4\u5408\u603B\u548C\u7684\u533A\u522B\u3002</p><p>1\u3001\u6392\u5E8F\uFF1B2\u3001\u540C\u4E00\u5C42\u7EA7\u76F8\u540C\u5143\u7D20\u526A\u679D\u3002</p><p><img src="http://img.dabin-coder.cn/image/permutations-ii.png" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">permuteUnique</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> used <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5207\u8BB0</span>
        <span class="token function">dps</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> used<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">dps</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> used<span class="token punctuation">,</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>used<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u540C\u4E00\u5C42\u76F8\u540C\u7684\u5143\u7D20\uFF0C\u526A\u679D</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token comment">//\u7EE7\u7EED\u5FAA\u73AF\uFF0C\u4E0D\u662Freturn\u9000\u51FA\u5FAA\u73AF</span>
            <span class="token punctuation">}</span>
            path<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">dps</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> used<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            path<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \u8D2A\u5FC3\u7B97\u6CD5</h2><p>\u8D2A\u5FC3\u7B97\u6CD5\uFF0C\u662F\u5BFB\u627E<strong>\u6700\u4F18\u89E3\u95EE\u9898</strong>\u7684\u5E38\u7528\u65B9\u6CD5\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u6A21\u5F0F\u4E00\u822C\u5C06\u6C42\u89E3\u8FC7\u7A0B\u5206\u6210<strong>\u82E5\u5E72\u4E2A\u6B65\u9AA4</strong>\uFF0C\u4F46\u6BCF\u4E2A\u6B65\u9AA4\u90FD\u5E94\u7528\u8D2A\u5FC3\u539F\u5219\uFF0C\u9009\u53D6\u5F53\u524D\u72B6\u6001\u4E0B<strong>\u6700\u597D/\u6700\u4F18\u7684\u9009\u62E9</strong>\uFF08\u5C40\u90E8\u6700\u6709\u5229\u7684\u9009\u62E9\uFF09\uFF0C\u5E76\u4EE5\u6B64\u5E0C\u671B\u6700\u540E\u5806\u53E0\u51FA\u7684\u7ED3\u679C\u4E5F\u662F\u6700\u597D/\u6700\u4F18\u7684\u89E3\u3002</p><p><strong>\u8D2A\u5A6A\u6CD5\u7684\u57FA\u672C\u6B65\u9AA4\uFF1A</strong></p><ol><li>\u4ECE\u67D0\u4E2A\u521D\u59CB\u89E3\u51FA\u53D1\uFF1B</li><li>\u91C7\u7528\u8FED\u4EE3\u7684\u8FC7\u7A0B\uFF0C\u5F53\u53EF\u4EE5\u5411\u76EE\u6807\u524D\u8FDB\u4E00\u6B65\u65F6\uFF0C\u5C31\u6839\u636E\u5C40\u90E8\u6700\u4F18\u7B56\u7565\uFF0C\u5F97\u5230\u4E00\u90E8\u5206\u89E3\uFF0C\u7F29\u5C0F\u95EE\u9898\u89C4\u6A21\uFF1B</li><li>\u5C06\u6240\u6709\u89E3\u7EFC\u5408\u8D77\u6765\u3002</li></ol><h3 id="\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A-ii" tabindex="-1"><a class="header-anchor" href="#\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A-ii" aria-hidden="true">#</a> \u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A II</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong>\uFF1A</p><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 prices \uFF0C\u5176\u4E2D prices[i] \u8868\u793A\u67D0\u652F\u80A1\u7968\u7B2C i \u5929\u7684\u4EF7\u683C\u3002</p><p>\u5728\u6BCF\u4E00\u5929\uFF0C\u4F60\u53EF\u4EE5\u51B3\u5B9A\u662F\u5426\u8D2D\u4E70\u548C/\u6216\u51FA\u552E\u80A1\u7968\u3002\u4F60\u5728\u4EFB\u4F55\u65F6\u5019 \u6700\u591A \u53EA\u80FD\u6301\u6709 \u4E00\u80A1 \u80A1\u7968\u3002\u4F60\u4E5F\u53EF\u4EE5\u5148\u8D2D\u4E70\uFF0C\u7136\u540E\u5728 \u540C\u4E00\u5929 \u51FA\u552E\u3002</p><p>\u8FD4\u56DE \u4F60\u80FD\u83B7\u5F97\u7684 \u6700\u5927 \u5229\u6DA6 \u3002</p><p><strong>\u793A\u4F8B</strong>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Aprices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token number">4</span>
\u89E3\u91CA\uFF1A\u5728\u7B2C <span class="token number">1</span> \u5929\uFF08\u80A1\u7968\u4EF7\u683C <span class="token operator">=</span> <span class="token number">1</span>\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C <span class="token number">5</span> \u5929 \uFF08\u80A1\u7968\u4EF7\u683C <span class="token operator">=</span> <span class="token number">5</span>\uFF09\u7684\u65F6\u5019\u5356\u51FA<span class="token punctuation">,</span> \u8FD9\u7B14\u4EA4\u6613\u6240\u80FD\u83B7\u5F97\u5229\u6DA6 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">4</span> \u3002
     \u603B\u5229\u6DA6\u4E3A <span class="token number">4</span> \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u601D\u8DEF\uFF1A\u53EF\u4EE5\u5C3D\u53EF\u80FD\u5730\u5B8C\u6210\u66F4\u591A\u7684\u4EA4\u6613\uFF0C\u4F46\u4E0D\u80FD\u540C\u65F6\u53C2\u4E0E\u591A\u7B14\u4EA4\u6613\uFF08\u4F60\u5FC5\u987B\u5728\u518D\u6B21\u8D2D\u4E70\u524D\u51FA\u552E\u6389\u4E4B\u524D\u7684\u80A1\u7968\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8F93\u5165: [7,1,5,3,6,4]</span>
<span class="token comment">//\u8F93\u51FA: 7</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> profit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> tmp <span class="token operator">=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                profit <span class="token operator">+=</span> tmp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> profit<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8DF3\u8DC3\u6E38\u620F" tabindex="-1"><a class="header-anchor" href="#\u8DF3\u8DC3\u6E38\u620F" aria-hidden="true">#</a> \u8DF3\u8DC3\u6E38\u620F</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u5B9A\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\u6570\u7EC4 <code>nums</code> \uFF0C\u4F60\u6700\u521D\u4F4D\u4E8E\u6570\u7EC4\u7684 <strong>\u7B2C\u4E00\u4E2A\u4E0B\u6807</strong> \u3002</p><p>\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u4EE3\u8868\u4F60\u5728\u8BE5\u4F4D\u7F6E\u53EF\u4EE5\u8DF3\u8DC3\u7684\u6700\u5927\u957F\u5EA6\u3002</p><p>\u5224\u65AD\u4F60\u662F\u5426\u80FD\u591F\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u4E0B\u6807\u3002</p><p><strong>\u793A\u4F8B</strong>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Anums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u89E3\u91CA\uFF1A\u53EF\u4EE5\u5148\u8DF3 <span class="token number">1</span> \u6B65\uFF0C\u4ECE\u4E0B\u6807 <span class="token number">0</span> \u5230\u8FBE\u4E0B\u6807 <span class="token number">1</span><span class="token punctuation">,</span> \u7136\u540E\u518D\u4ECE\u4E0B\u6807 <span class="token number">1</span> \u8DF3 <span class="token number">3</span> \u6B65\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u4E0B\u6807\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u9898\u601D\u8DEF\uFF1A</p><ol><li>\u5982\u679C\u67D0\u4E00\u4E2A\u4F5C\u4E3A \u8D77\u8DF3\u70B9 \u7684\u683C\u5B50\u53EF\u4EE5\u8DF3\u8DC3\u7684\u8DDD\u79BB\u662F 3\uFF0C\u90A3\u4E48\u8868\u793A\u540E\u9762 3 \u4E2A\u683C\u5B50\u90FD\u53EF\u4EE5\u4F5C\u4E3A \u8D77\u8DF3\u70B9</li><li>\u53EF\u4EE5\u5BF9\u6BCF\u4E00\u4E2A\u80FD\u4F5C\u4E3A \u8D77\u8DF3\u70B9 \u7684\u683C\u5B50\u90FD\u5C1D\u8BD5\u8DF3\u4E00\u6B21\uFF0C\u628A \u80FD\u8DF3\u5230\u6700\u8FDC\u7684\u8DDD\u79BB \u4E0D\u65AD\u66F4\u65B0</li><li>\u5982\u679C\u53EF\u4EE5\u4E00\u76F4\u8DF3\u5230\u6700\u540E\uFF0C\u5C31\u6210\u529F\u4E86</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canJump</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> maxIndex <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>maxIndex <span class="token operator">&gt;=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                maxIndex <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxIndex<span class="token punctuation">,</span> i <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u52A0\u6CB9\u7AD9" tabindex="-1"><a class="header-anchor" href="#\u52A0\u6CB9\u7AD9" aria-hidden="true">#</a> \u52A0\u6CB9\u7AD9</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u5728\u4E00\u6761\u73AF\u8DEF\u4E0A\u6709 n \u4E2A\u52A0\u6CB9\u7AD9\uFF0C\u5176\u4E2D\u7B2C i \u4E2A\u52A0\u6CB9\u7AD9\u6709\u6C7D\u6CB9 gas[i] \u5347\u3002</p><p>\u4F60\u6709\u4E00\u8F86\u6CB9\u7BB1\u5BB9\u91CF\u65E0\u9650\u7684\u7684\u6C7D\u8F66\uFF0C\u4ECE\u7B2C i \u4E2A\u52A0\u6CB9\u7AD9\u5F00\u5F80\u7B2C i+1 \u4E2A\u52A0\u6CB9\u7AD9\u9700\u8981\u6D88\u8017\u6C7D\u6CB9 cost[i] \u5347\u3002\u4F60\u4ECE\u5176\u4E2D\u7684\u4E00\u4E2A\u52A0\u6CB9\u7AD9\u51FA\u53D1\uFF0C\u5F00\u59CB\u65F6\u6CB9\u7BB1\u4E3A\u7A7A\u3002</p><p>\u7ED9\u5B9A\u4E24\u4E2A\u6574\u6570\u6570\u7EC4 gas \u548C cost \uFF0C\u5982\u679C\u4F60\u53EF\u4EE5\u7ED5\u73AF\u8DEF\u884C\u9A76\u4E00\u5468\uFF0C\u5219\u8FD4\u56DE\u51FA\u53D1\u65F6\u52A0\u6CB9\u7AD9\u7684\u7F16\u53F7\uFF0C\u5426\u5219\u8FD4\u56DE -1 \u3002\u5982\u679C\u5B58\u5728\u89E3\uFF0C\u5219 \u4FDD\u8BC1 \u5B83\u662F \u552F\u4E00 \u7684\u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165<span class="token operator">:</span> gas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cost <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
\u8F93\u51FA<span class="token operator">:</span> <span class="token number">3</span>
\u89E3\u91CA<span class="token operator">:</span>
\u4ECE <span class="token number">3</span> \u53F7\u52A0\u6CB9\u7AD9<span class="token punctuation">(</span>\u7D22\u5F15\u4E3A <span class="token number">3</span> \u5904<span class="token punctuation">)</span>\u51FA\u53D1\uFF0C\u53EF\u83B7\u5F97 <span class="token number">4</span> \u5347\u6C7D\u6CB9\u3002\u6B64\u65F6\u6CB9\u7BB1\u6709 <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">=</span> <span class="token number">4</span> \u5347\u6C7D\u6CB9
\u5F00\u5F80 <span class="token number">4</span> \u53F7\u52A0\u6CB9\u7AD9\uFF0C\u6B64\u65F6\u6CB9\u7BB1\u6709 <span class="token number">4</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">8</span> \u5347\u6C7D\u6CB9
\u5F00\u5F80 <span class="token number">0</span> \u53F7\u52A0\u6CB9\u7AD9\uFF0C\u6B64\u65F6\u6CB9\u7BB1\u6709 <span class="token number">8</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">7</span> \u5347\u6C7D\u6CB9
\u5F00\u5F80 <span class="token number">1</span> \u53F7\u52A0\u6CB9\u7AD9\uFF0C\u6B64\u65F6\u6CB9\u7BB1\u6709 <span class="token number">7</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">6</span> \u5347\u6C7D\u6CB9
\u5F00\u5F80 <span class="token number">2</span> \u53F7\u52A0\u6CB9\u7AD9\uFF0C\u6B64\u65F6\u6CB9\u7BB1\u6709 <span class="token number">6</span> <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">5</span> \u5347\u6C7D\u6CB9
\u5F00\u5F80 <span class="token number">3</span> \u53F7\u52A0\u6CB9\u7AD9\uFF0C\u4F60\u9700\u8981\u6D88\u8017 <span class="token number">5</span> \u5347\u6C7D\u6CB9\uFF0C\u6B63\u597D\u8DB3\u591F\u4F60\u8FD4\u56DE\u5230 <span class="token number">3</span> \u53F7\u52A0\u6CB9\u7AD9\u3002
\u56E0\u6B64\uFF0C<span class="token number">3</span> \u53EF\u4E3A\u8D77\u59CB\u7D22\u5F15\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong>\uFF1A</p><ol><li>\u904D\u5386\u4E00\u5468\uFF0C\u603B\u83B7\u5F97\u7684\u6CB9\u91CF\u5C11\u4E8E\u8981\u82B1\u6389\u7684\u6CB9\u91CF\u5FC5\u7136\u6CA1\u6709\u7ED3\u679C\uFF1B</li><li>\u5148\u82E6\u540E\u751C\uFF0C\u8BB0\u5F55\u904D\u5386\u65F6\u6240\u5B58\u7684\u6CB9\u91CF\u6700\u5C11\u7684\u7AD9\u70B9\uFF0C\u7531\u4E8E\u9898\u76EE\u6709\u89E3\u53EA\u6709\u552F\u4E00\u89E3\uFF0C\u6240\u4EE5\u4ECE\u5F53\u524D\u7AD9\u70B9\u7684\u4E0B\u4E00\u4E2A\u7AD9\u70B9\u5F00\u59CB\u662F\u552F\u4E00\u53EF\u80FD\u6210\u529F\u5F00\u5B8C\u5168\u7A0B\u7684\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">canCompleteCircuit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> gas<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cost<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> minIdx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">int</span> num<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> gas<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            num<span class="token operator">+=</span>gas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>cost<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">&lt;</span>sum<span class="token punctuation">)</span><span class="token punctuation">{</span>
                sum<span class="token operator">=</span>num<span class="token punctuation">;</span>
                minIdx<span class="token operator">=</span>i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> num<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>minIdx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>gas<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h2><h3 id="\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> \u53CD\u8F6C\u94FE\u8868</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u4F60\u5355\u94FE\u8868\u7684\u5934\u8282\u70B9 <code>head</code> \uFF0C\u8BF7\u4F60\u53CD\u8F6C\u94FE\u8868\uFF0C\u5E76\u8FD4\u56DE\u53CD\u8F6C\u540E\u7684\u94FE\u8868\u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Ahead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u601D\u8DEF\uFF1A</p><ol><li>\u5B9A\u4E49\u4E24\u4E2A\u6307\u9488\uFF0C\u7B2C\u4E00\u4E2A\u6307\u9488\u53EB pre\uFF0C\u6700\u521D\u662F\u6307\u5411 null \u7684\u3002</li><li>\u7B2C\u4E8C\u4E2A\u6307\u9488 cur \u6307\u5411 head\uFF0C\u7136\u540E\u4E0D\u65AD\u904D\u5386 cur\u3002</li><li>\u6BCF\u6B21\u8FED\u4EE3\u5230 cur\uFF0C\u90FD\u5C06 cur \u7684 next \u6307\u5411 pre\uFF0C\u7136\u540E pre \u548C cur \u524D\u8FDB\u4E00\u4F4D\u3002</li><li>\u90FD\u8FED\u4EE3\u5B8C\u4E86(cur \u53D8\u6210 null \u4E86)\uFF0Cpre \u5C31\u662F\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u4E86\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseList</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> tmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tmp <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>
            pre <span class="token operator">=</span> cur<span class="token punctuation">;</span>
            cur <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CD\u8F6C\u94FE\u8868ii" tabindex="-1"><a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868ii" aria-hidden="true">#</a> \u53CD\u8F6C\u94FE\u8868II</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u4F60\u5355\u94FE\u8868\u7684\u5934\u6307\u9488 head \u548C\u4E24\u4E2A\u6574\u6570 left \u548C right \uFF0C\u5176\u4E2D left &lt;= right \u3002\u8BF7\u4F60\u53CD\u8F6C\u4ECE\u4F4D\u7F6E left \u5230\u4F4D\u7F6E right \u7684\u94FE\u8868\u8282\u70B9\uFF0C\u8FD4\u56DE \u53CD\u8F6C\u540E\u7684\u94FE\u8868 \u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Ahead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token number">4</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong>\uFF1A\u53CC\u6307\u9488+\u5934\u63D2\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseBetween</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dummy<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> dummy<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        head <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> m<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            head<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            pre<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u94FE\u8868\u5012\u6570\u7B2Cn\u4E2A\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u94FE\u8868\u5012\u6570\u7B2Cn\u4E2A\u8282\u70B9" aria-hidden="true">#</a> \u5220\u9664\u94FE\u8868\u5012\u6570\u7B2Cn\u4E2A\u8282\u70B9</h3><p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u4F60\u4E00\u4E2A\u94FE\u8868\uFF0C\u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C <code>n</code> \u4E2A\u7ED3\u70B9\uFF0C\u5E76\u4E14\u8FD4\u56DE\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Ahead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">2</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u601D\u8DEF\uFF1A\u4F7F\u7528\u5FEB\u6162\u6307\u9488\uFF0C\u5FEB\u6307\u9488\u5148\u8D70n\u6B65\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">removeNthFromEnd</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6280\u5DE7</span>
        tmp<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>

        <span class="token class-name">ListNode</span> fast <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> tmp<span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>fast<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        slow<span class="token punctuation">.</span>next <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>

        <span class="token keyword">return</span> tmp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E09\u6570\u4E4B\u548C" tabindex="-1"><a class="header-anchor" href="#\u4E09\u6570\u4E4B\u548C" aria-hidden="true">#</a> \u4E09\u6570\u4E4B\u548C</h3>`,116),m={href:"https://leetcode.cn/problems/3sum/",target:"_blank",rel:"noopener noreferrer"},b=p("\u9898\u76EE\u94FE\u63A5"),g=s(`<p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u4F60\u4E00\u4E2A\u5305\u542B n \u4E2A\u6574\u6570\u7684\u6570\u7EC4 nums\uFF0C\u5224\u65AD nums \u4E2D\u662F\u5426\u5B58\u5728\u4E09\u4E2A\u5143\u7D20 a\uFF0Cb\uFF0Cc \uFF0C\u4F7F\u5F97 a + b + c = 0 \uFF1F\u8BF7\u4F60\u627E\u51FA\u6240\u6709\u548C\u4E3A 0 \u4E14\u4E0D\u91CD\u590D\u7684\u4E09\u5143\u7EC4\u3002</p><p>\u6CE8\u610F\uFF1A\u7B54\u6848\u4E2D\u4E0D\u53EF\u4EE5\u5305\u542B\u91CD\u590D\u7684\u4E09\u5143\u7EC4\u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Anums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong>\uFF1A</p><ul><li>\u9996\u5148\u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u6392\u5E8F\u540E\u56FA\u5B9A\u4E00\u4E2A\u6570 nums[i]nums[i]\uFF0C\u518D\u4F7F\u7528\u5DE6\u53F3\u6307\u9488\u6307\u5411 nums[i]nums[i]\u540E\u9762\u7684\u4E24\u7AEF\uFF0C\u6570\u5B57\u5206\u522B\u4E3A nums[L]nums[L] \u548C</li><li>nums[R]nums[R]\uFF0C\u8BA1\u7B97\u4E09\u4E2A\u6570\u7684\u548C sumsum \u5224\u65AD\u662F\u5426\u6EE1\u8DB3\u4E3A 00\uFF0C\u6EE1\u8DB3\u5219\u6DFB\u52A0\u8FDB\u7ED3\u679C\u96C6</li><li>\u5982\u679C nums[i]nums[i]\u5927\u4E8E 00\uFF0C\u5219\u4E09\u6570\u4E4B\u548C\u5FC5\u7136\u65E0\u6CD5\u7B49\u4E8E 00\uFF0C\u7ED3\u675F\u5FAA\u73AF</li><li>\u5982\u679C nums[i]nums[i] == nums[i-1]nums[i\u22121]\uFF0C\u5219\u8BF4\u660E\u8BE5\u6570\u5B57\u91CD\u590D\uFF0C\u4F1A\u5BFC\u81F4\u7ED3\u679C\u91CD\u590D\uFF0C\u6240\u4EE5\u5E94\u8BE5\u8DF3\u8FC7</li><li>\u5F53 sumsum == 00 \u65F6\uFF0Cnums[L]nums[L] == nums[L+1]nums[L+1] \u5219\u4F1A\u5BFC\u81F4\u7ED3\u679C\u91CD\u590D\uFF0C\u5E94\u8BE5\u8DF3\u8FC7\uFF0CL++L++</li><li>\u5F53 sumsum == 00 \u65F6\uFF0Cnums[R]nums[R] == nums[R-1]nums[R\u22121] \u5219\u4F1A\u5BFC\u81F4\u7ED3\u679C\u91CD\u590D\uFF0C\u5E94\u8BE5\u8DF3\u8FC7\uFF0CR--R\u2212\u2212</li></ul><p><strong>\u53C2\u8003\u4EE3\u7801</strong>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">threeSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u6700\u5DE6\u8FB9\u7684\u6570\u5B57\u5927\u4E8E0\uFF0C\u5219sum\u4E0D\u4F1A\u7B49\u4E8E0\uFF0C\u9000\u51FA</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u53BB\u91CD\u590D</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> left <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> sum <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">///array to list</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        left<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        right<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                    right<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    right<span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    left<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u73AF\u5F62\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u73AF\u5F62\u94FE\u8868" aria-hidden="true">#</a> \u73AF\u5F62\u94FE\u8868</h3>`,10),y={href:"https://leetcode.cn/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"},w=p("\u9898\u76EE\u94FE\u63A5"),h=s(`<p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u4F60\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u8282\u70B9 head \uFF0C\u5224\u65AD\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF\u3002</p><p>\u5982\u679C\u94FE\u8868\u4E2D\u6709\u67D0\u4E2A\u8282\u70B9\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FDE\u7EED\u8DDF\u8E2A next \u6307\u9488\u518D\u6B21\u5230\u8FBE\uFF0C\u5219\u94FE\u8868\u4E2D\u5B58\u5728\u73AF\u3002 \u4E3A\u4E86\u8868\u793A\u7ED9\u5B9A\u94FE\u8868\u4E2D\u7684\u73AF\uFF0C\u8BC4\u6D4B\u7CFB\u7EDF\u5185\u90E8\u4F7F\u7528\u6574\u6570 pos \u6765\u8868\u793A\u94FE\u8868\u5C3E\u8FDE\u63A5\u5230\u94FE\u8868\u4E2D\u7684\u4F4D\u7F6E\uFF08\u7D22\u5F15\u4ECE 0 \u5F00\u59CB\uFF09\u3002\u6CE8\u610F\uFF1Apos \u4E0D\u4F5C\u4E3A\u53C2\u6570\u8FDB\u884C\u4F20\u9012 \u3002\u4EC5\u4EC5\u662F\u4E3A\u4E86\u6807\u8BC6\u94FE\u8868\u7684\u5B9E\u9645\u60C5\u51B5\u3002</p><p>\u5982\u679C\u94FE\u8868\u4E2D\u5B58\u5728\u73AF \uFF0C\u5219\u8FD4\u56DE true \u3002 \u5426\u5219\uFF0C\u8FD4\u56DE false \u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Ahead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> <span class="token number">1</span>
\u8F93\u51FA\uFF1A<span class="token boolean">true</span>
\u89E3\u91CA\uFF1A\u94FE\u8868\u4E2D\u6709\u4E00\u4E2A\u73AF\uFF0C\u5176\u5C3E\u90E8\u8FDE\u63A5\u5230\u7B2C\u4E8C\u4E2A\u8282\u70B9\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><p>\u5FEB\u6162\u6307\u9488\u3002\u5FEB\u6307\u9488\u6BCF\u6B21\u8D70\u4E24\u6B65\uFF0C\u6162\u6307\u9488\u8D70\u4E00\u6B65\uFF0C\u76F8\u5F53\u4E8E\u6162\u6307\u9488\u4E0D\u52A8\uFF0C\u5FEB\u6307\u9488\u6BCF\u6B21\u8D70\u4E00\u6B65\uFF0C\u5982\u679C\u662F\u73AF\u5F62\u94FE\u8868\uFF0C\u5219\u4E00\u5B9A\u4F1A\u76F8\u9047\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasCycle</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">ListNode</span> quick <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>quick <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> quick<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            quick <span class="token operator">=</span> quick<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            
            <span class="token keyword">if</span> <span class="token punctuation">(</span>slow <span class="token operator">==</span> quick<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u73AF\u5F62\u94FE\u8868ii" tabindex="-1"><a class="header-anchor" href="#\u73AF\u5F62\u94FE\u8868ii" aria-hidden="true">#</a> \u73AF\u5F62\u94FE\u8868II</h3>`,10),f={href:"https://leetcode.cn/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"},j=p("\u9898\u76EE\u94FE\u63A5"),x=s(`<p><strong>\u9898\u76EE\u63CF\u8FF0</strong></p><p>\u7ED9\u5B9A\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u8282\u70B9 head \uFF0C\u8FD4\u56DE\u94FE\u8868\u5F00\u59CB\u5165\u73AF\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002 \u5982\u679C\u94FE\u8868\u65E0\u73AF\uFF0C\u5219\u8FD4\u56DE null\u3002</p><p>\u5982\u679C\u94FE\u8868\u4E2D\u6709\u67D0\u4E2A\u8282\u70B9\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FDE\u7EED\u8DDF\u8E2A next \u6307\u9488\u518D\u6B21\u5230\u8FBE\uFF0C\u5219\u94FE\u8868\u4E2D\u5B58\u5728\u73AF\u3002 \u4E3A\u4E86\u8868\u793A\u7ED9\u5B9A\u94FE\u8868\u4E2D\u7684\u73AF\uFF0C\u8BC4\u6D4B\u7CFB\u7EDF\u5185\u90E8\u4F7F\u7528\u6574\u6570 pos \u6765\u8868\u793A\u94FE\u8868\u5C3E\u8FDE\u63A5\u5230\u94FE\u8868\u4E2D\u7684\u4F4D\u7F6E\uFF08\u7D22\u5F15\u4ECE 0 \u5F00\u59CB\uFF09\u3002\u5982\u679C pos \u662F -1\uFF0C\u5219\u5728\u8BE5\u94FE\u8868\u4E2D\u6CA1\u6709\u73AF\u3002\u6CE8\u610F\uFF1Apos \u4E0D\u4F5C\u4E3A\u53C2\u6570\u8FDB\u884C\u4F20\u9012\uFF0C\u4EC5\u4EC5\u662F\u4E3A\u4E86\u6807\u8BC6\u94FE\u8868\u7684\u5B9E\u9645\u60C5\u51B5\u3002</p><p>\u4E0D\u5141\u8BB8\u4FEE\u6539 \u94FE\u8868\u3002</p><p><strong>\u793A\u4F8B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1Ahead <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> <span class="token number">1</span>
\u8F93\u51FA\uFF1A\u8FD4\u56DE\u7D22\u5F15\u4E3A <span class="token number">1</span> \u7684\u94FE\u8868\u8282\u70B9
\u89E3\u91CA\uFF1A\u94FE\u8868\u4E2D\u6709\u4E00\u4E2A\u73AF\uFF0C\u5176\u5C3E\u90E8\u8FDE\u63A5\u5230\u7B2C\u4E8C\u4E2A\u8282\u70B9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u89E3\u9898\u601D\u8DEF</strong></p><p>\u65B9\u6CD5\u4E00\uFF1A\u5934\u7ED3\u70B9\u5230\u5165\u73AF\u7ED3\u70B9\u7684\u8DDD\u79BB\u4E3Aa\uFF0C\u5165\u73AF\u7ED3\u70B9\u5230\u76F8\u9047\u7ED3\u70B9\u7684\u8DDD\u79BB\u4E3Ab\uFF0C\u76F8\u9047\u7ED3\u70B9\u5230\u5165\u73AF\u7ED3\u70B9\u7684\u8DDD\u79BB\u4E3Ac\u3002\u7136\u540E\uFF0C\u5F53fast\u4EE5slow\u7684\u4E24\u500D\u901F\u5EA6\u524D\u8FDB\u5E76\u548Cslow\u76F8\u9047\u65F6\uFF0Cfast\u8D70\u8FC7\u7684\u8DDD\u79BB\u662Fs\u7684\u4E24\u500D\uFF0C\u5373\u6709\u7B49\u5F0F\uFF1Aa+b+c+b = 2(a+b) \uFF0C\u53EF\u4EE5\u5F97\u51FA a = c \uFF0C\u6240\u4EE5\u8BF4\uFF0C\u8BA9fast\u548Cslow\u5206\u522B\u4ECE\u76F8\u9047\u7ED3\u70B9\u548C\u5934\u7ED3\u70B9\u540C\u65F6\u540C\u6B65\u957F\u51FA\u53D1\uFF0C\u4ED6\u4EEC\u7684\u76F8\u9047\u7ED3\u70B9\u5C31\u662F\u5165\u73AF\u7ED3\u70B9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">detectCycle</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fast <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> fast<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fast <span class="token operator">==</span> slow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
 
        <span class="token keyword">while</span> <span class="token punctuation">(</span>slow <span class="token operator">!=</span> fast<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> fast<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD5\u4E8C\uFF1A\u5148\u7B97\u51FA\u73AF\u7684\u5927\u5C0Fn\uFF0C\u5FEB\u6307\u9488\u5148\u8D70n\u6B65\uFF0C\u7136\u540E\u5FEB\u6162\u6307\u9488\u4E00\u8D77\u8D70\uFF0C\u76F8\u9047\u7684\u5730\u65B9\u5373\u662F\u73AF\u7684\u5165\u53E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">detectCycle</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
	    <span class="token comment">//\u5FEB\u6162\u6307\u9488\u627E\u51FA\u73AF\u7684\u5927\u5C0F</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>fast <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fast <span class="token operator">==</span> slow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>fast <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> fast<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">int</span> cycleSize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>fast<span class="token punctuation">.</span>next <span class="token operator">!=</span> slow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cycleSize<span class="token operator">++</span><span class="token punctuation">;</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//\u5FEB\u6162\u6307\u9488\u91CD\u65B0\u4ECE\u94FE\u8868\u9996\u90E8\u51FA\u53D1\uFF0C\u5FEB\u6307\u9488\u5148\u8D70sizeOfCycle\u6B65</span>
        <span class="token comment">//\u7136\u540E\u4E24\u4E2A\u6307\u9488\u540C\u65F6\u4E00\u8D77\u8D70\uFF0C\u6B65\u957F\u4E3A1\uFF0C\u76F8\u9047\u8282\u70B9\u5373\u662F\u73AF\u7684\u5165\u53E3</span>
        fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
        slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cycleSize<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>fast <span class="token operator">!=</span> slow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> fast<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function L(S,q){const o=e("RouterLink"),t=e("ExternalLinkIcon");return l(),u("div",null,[r,n("p",null,[a(o,{to:"/leetcode/unique-paths.html"},{default:i(()=>[d]),_:1})]),v,n("p",null,[n("a",m,[b,a(t)])]),g,n("p",null,[n("a",y,[w,a(t)])]),h,n("p",null,[n("a",f,[j,a(t)])]),x])}var A=c(k,[["render",L],["__file","algorithm.html.vue"]]);export{A as default};
