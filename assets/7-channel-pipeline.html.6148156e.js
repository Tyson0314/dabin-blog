import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as a,c as s,e as t}from"./app.09d9ce72.js";const e={},p=t(`<h1 id="channelpipeline-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#channelpipeline-\u63A5\u53E3" aria-hidden="true">#</a> ChannelPipeline \u63A5\u53E3</h1><p>\u6BCF\u4E00\u4E2A\u65B0\u521B\u5EFA\u7684 Channel \u90FD\u5C06\u4F1A\u88AB\u5206\u914D\u4E00\u4E2A\u65B0\u7684 ChannelPipeline\uFF0C\u8FD9\u9879\u5173\u8054\u662F\u6C38\u4E45\u6027\u7684\uFF1BChannel \u65E2\u4E0D\u80FD\u9644\u52A0\u53E6\u5916\u4E00\u4E2AChannelPipeline\uFF0C\u4E5F\u4E0D\u80FD\u5206\u79BB\u5176\u5F53\u524D\u7684\u3002</p><p>ChannelHandlerContext \u4F7F\u5F97 ChannelHandler \u80FD\u591F\u548C\u5B83\u7684 ChannelPipeline \u4EE5\u53CA\u5176\u4ED6\u7684 ChannelHandler \u4EA4\u4E92\u3002</p><h2 id="\u4FEE\u6539channelpipeline" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539channelpipeline" aria-hidden="true">#</a> \u4FEE\u6539ChannelPipeline</h2><p>ChannelHandler \u53EF\u4EE5\u901A\u8FC7\u6DFB\u52A0\u3001\u5220\u9664\u6216\u8005\u66FF\u6362\u5176\u4ED6\u7684ChannelHandler \u6765\u5B9E\u65F6\u5730\u4FEE\u6539ChannelPipeline \u7684\u5E03\u5C40\u3002</p><table><thead><tr><th>\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>addFirst/addBefore/addAfter/addLast</td><td>\u5C06 ChannelHandler \u6DFB\u52A0\u5230 ChannelPipeline</td></tr><tr><td>remove</td><td>\u79FB\u9664</td></tr><tr><td>replace</td><td>\u66FF\u6362</td></tr></tbody></table><p>ChannelPipeline \u7684\u7528\u4E8E\u8BBF\u95EEChannelHandler \u7684\u64CD\u4F5C\uFF1A</p><table><thead><tr><th>\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>get</td><td>\u8FD4\u56DEChannelHandler</td></tr><tr><td>context</td><td>\u8FD4\u56DE\u548CChannelHandler\u7ED1\u5B9A\u7684ChannelHandlerContext</td></tr><tr><td>names</td><td>\u8FD4\u56DE\u6240\u6709\u7684ChannelHanlder\u540D\u79F0</td></tr></tbody></table><h2 id="channelhandlercontext-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#channelhandlercontext-\u63A5\u53E3" aria-hidden="true">#</a> ChannelHandlerContext \u63A5\u53E3</h2><p>ChannelHandlerContext \u4EE3\u8868\u4E86ChannelHandler \u548CChannelPipeline \u4E4B\u95F4\u7684\u5173\u8054\uFF0C\u6BCF\u5F53\u6709ChannelHandler \u6DFB\u52A0\u5230ChannelPipeline \u4E2D\u65F6\uFF0C\u90FD\u4F1A\u521B\u5EFAChannelHandlerContext\u3002</p><p><img src="http://img.dabin-coder.cn/image/netty1.png" alt="" loading="lazy"></p><table><thead><tr><th>\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>fireChannelRead</td><td>\u89E6\u53D1\u5BF9\u4E0B\u4E00\u4E2AChannelInboundHandler\u7684channelRead()\u65B9\u6CD5\u7684\u8C03\u7528</td></tr><tr><td>alloc</td><td>\u8FD4\u56DE\u76F8\u5173\u8054\u7684Channel\u6240\u914D\u7F6E\u7684ByteBufAllocator</td></tr><tr><td>bind</td><td>\u7ED1\u5B9A\u5230\u7ED9\u5B9A\u7684SocketAddress\uFF0C\u5E76\u8FD4\u56DEChannelFuture</td></tr></tbody></table><h2 id="\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> \u5F02\u5E38\u5904\u7406</h2><p>\u5165\u7AD9\u5F02\u5E38\uFF1A\u5728 ChannelInboundHandler \u5B9E\u73B0 exceptionCaught \u65B9\u6CD5\u3002</p><p>\u51FA\u7AD9\u5F02\u5E38\uFF1A</p><p>1.\u6DFB\u52A0ChannelFutureListener \u5230ChannelFuture</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token class-name">ChannelFuture</span> future <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>someMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
    future<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChannelFutureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> operationComplete <span class="token punctuation">(</span><span class="token class-name">ChannelFuture</span> f<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>f<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                f<span class="token punctuation">.</span><span class="token function">cause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                f<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.\u6DFB\u52A0ChannelFutureListener \u5230ChannelPromise\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OutboundExceptionHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ChannelOutboundHandlerAdapter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> msg<span class="token punctuation">,</span>
                      <span class="token class-name">ChannelPromise</span> promise<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        promise<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChannelFutureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operationComplete</span><span class="token punctuation">(</span><span class="token class-name">ChannelFuture</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>f<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    f<span class="token punctuation">.</span><span class="token function">cause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    f<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),c=[p];function l(o,i){return a(),s("div",null,c)}var r=n(e,[["render",l],["__file","7-channel-pipeline.html.vue"]]);export{r as default};
